version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kafka-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka-net

  youtube_dashboard:
    build: ./
    container_name: youtube-dashboard
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
      - redis
      - kafka
    networks:
      - kafka-net
    restart: always

  consumer:
    build:
      context: ./
      dockerfile: Dockerfile.consumer
    container_name: youtube-data-insertion-consumer
    depends_on:
      - mongodb
      - redis
      - kafka
      - youtube_dashboard
    networks:
      - kafka-net
    restart: always

  setup_defaults:
    build:
      context: ./
      dockerfile: Dockerfile.default
    container_name: setup-credentials-and-indexes
    depends_on:
      - mongodb
    networks:
      - kafka-net

volumes:
  mongodb_data:

networks:
  kafka-net:
    driver: bridge
    name: kafka_docker_bridge_v1
